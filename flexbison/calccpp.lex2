/* recognize tokens for the calculator and print them out */
%option noyywrap
%{
#include "calccpp.tab.hh"
using token = yy::parser::token;
extern yy::parser::semantic_type yylval;
#define YY_DECL int yylex(yy::parser::semantic_type* value)
%}
%%
"+" { return token::ADD; }
"-" { return token::SUB; }
"*" { return token::MUL; }
"/" { return token::DIV; }
"|" { return token::ABS; }
"%" { return token::MOD; }
[0-9]+ { yylval.value = atof(yytext); return token::NUMBER; }
[0-9]+.[0-9]+ { yylval.value = atof(yytext); return token::NUMBER; }
\n { return token::EOL; }
[ \t] { /* ignore whitespace */ }
"(" { return token::OP; }
")" { return token::CP; }
"//".* /* ignore comments */
. { printf("Mystery character %c\n", *yytext); }
%%
